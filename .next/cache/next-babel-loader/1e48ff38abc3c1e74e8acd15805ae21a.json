{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { useState } from 'react';\nconst defaultCart = {\n  products: {}\n};\nconst cartItems = Object.keys(cart.products).map(key => {\n  const product = products.find(({\n    id\n  }) => `${id}` === `${key}`);\n  return _objectSpread(_objectSpread({}, cart.products[key]), {}, {\n    pricePerItem: product.price\n  });\n});\nconst subTotal = cartItems.reduce((accumulator, {\n  pricePerItem,\n  quantity\n}) => {\n  return accumulator + pricePerItem * quantity;\n}, 0);\nconst totalItems = cartItems.reduce((accumulator, {\n  quantity\n}) => {\n  return accumulator + quantity;\n}, 0);\nexport default function useCart() {\n  const {\n    0: cart,\n    1: updateCart\n  } = useState(defaultCart);\n  return {\n    cart,\n    updateCart,\n    subTotal,\n    cartItems,\n    checkout\n  };\n}","map":{"version":3,"sources":["/Users/acandael/Tutorials/space-jelly-store/hooks/use-cart.js"],"names":["useState","defaultCart","products","cartItems","Object","keys","cart","map","key","product","find","id","pricePerItem","price","subTotal","reduce","accumulator","quantity","totalItems","useCart","updateCart","checkout"],"mappings":";;;;;;AAAA,SAAQA,QAAR,QAAuB,OAAvB;AAEA,MAAMC,WAAW,GAAG;AAClBC,EAAAA,QAAQ,EAAE;AADQ,CAApB;AAIA,MAAMC,SAAS,GAAGC,MAAM,CAACC,IAAP,CAAYC,IAAI,CAACJ,QAAjB,EAA2BK,GAA3B,CAA+BC,GAAG,IAAI;AACtD,QAAMC,OAAO,GAAGP,QAAQ,CAACQ,IAAT,CAAc,CAAC;AAACC,IAAAA;AAAD,GAAD,KAAW,GAAEA,EAAG,EAAN,KAAa,GAAEH,GAAI,EAA3C,CAAhB;AACA,yCACKF,IAAI,CAACJ,QAAL,CAAcM,GAAd,CADL;AAEEI,IAAAA,YAAY,EAAEH,OAAO,CAACI;AAFxB;AAID,CANiB,CAAlB;AAQA,MAAMC,QAAQ,GAAGX,SAAS,CAACY,MAAV,CAAiB,CAACC,WAAD,EAAc;AAACJ,EAAAA,YAAD;AAAeK,EAAAA;AAAf,CAAd,KAA2C;AAC3E,SAAOD,WAAW,GAAIJ,YAAY,GAAGK,QAArC;AACD,CAFgB,EAEd,CAFc,CAAjB;AAIA,MAAMC,UAAU,GAAGf,SAAS,CAACY,MAAV,CAAiB,CAACC,WAAD,EAAc;AAACC,EAAAA;AAAD,CAAd,KAA6B;AAC/D,SAAOD,WAAW,GAAGC,QAArB;AACD,CAFkB,EAEhB,CAFgB,CAAnB;AAKA,eAAe,SAASE,OAAT,GAAkB;AAC/B,QAAM;AAAA,OAACb,IAAD;AAAA,OAAOc;AAAP,MAAqBpB,QAAQ,CAACC,WAAD,CAAnC;AACA,SAAO;AACLK,IAAAA,IADK;AAELc,IAAAA,UAFK;AAGLN,IAAAA,QAHK;AAILX,IAAAA,SAJK;AAKLkB,IAAAA;AALK,GAAP;AAOD","sourcesContent":["import {useState} from 'react';\n\nconst defaultCart = {\n  products: {}\n}\n\nconst cartItems = Object.keys(cart.products).map(key => {\n  const product = products.find(({id}) => `${id}` === `${key}`)\n  return {\n    ...cart.products[key],\n    pricePerItem: product.price\n  }\n})\n\nconst subTotal = cartItems.reduce((accumulator, {pricePerItem, quantity}) => {\n  return accumulator + (pricePerItem * quantity)\n}, 0)\n\nconst totalItems = cartItems.reduce((accumulator, {quantity}) => {\n  return accumulator + quantity\n}, 0)\n\n\nexport default function useCart(){\n  const [cart, updateCart] = useState(defaultCart)\n  return {\n    cart,\n    updateCart,\n    subTotal,\n    cartItems,\n    checkout\n  }\n}"]},"metadata":{},"sourceType":"module"}