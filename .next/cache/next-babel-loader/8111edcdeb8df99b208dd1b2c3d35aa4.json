{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nvar _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { useState } from 'react';\nimport products from '../products.json';\nvar defaultCart = {\n  products: {}\n};\n\nfunction addToCart() {\n  var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n      id = _ref.id;\n\n  updateCart(function (prev) {\n    var cart = _objectSpread({}, prev);\n\n    if (cart.products[id]) {\n      cart.products[id].quantity = cart.products[id].quantity + 1;\n    } else {\n      cart.products[id] = {\n        id: id,\n        quantity: 1\n      };\n    }\n\n    return cart;\n  });\n}\n\nvar cartItems = Object.keys(cart.products).map(function (key) {\n  var product = products.find(function (_ref2) {\n    var id = _ref2.id;\n    return \"\".concat(id) === \"\".concat(key);\n  });\n  return _objectSpread(_objectSpread({}, cart.products[key]), {}, {\n    pricePerItem: product.price\n  });\n});\nvar subTotal = cartItems.reduce(function (accumulator, _ref3) {\n  var pricePerItem = _ref3.pricePerItem,\n      quantity = _ref3.quantity;\n  return accumulator + pricePerItem * quantity;\n}, 0);\nvar totalItems = cartItems.reduce(function (accumulator, _ref4) {\n  var quantity = _ref4.quantity;\n  return accumulator + quantity;\n}, 0);\nexport default function useCart() {\n  _s();\n\n  var _useState = useState(defaultCart),\n      cart = _useState[0],\n      updateCart = _useState[1];\n\n  return {\n    cart: cart,\n    updateCart: updateCart,\n    subTotal: subTotal,\n    cartItems: cartItems\n  };\n}\n\n_s(useCart, \"wKZ0WOakDEfFEhOSo9H2Efpji7g=\");","map":{"version":3,"sources":["/Users/acandael/Tutorials/space-jelly-store/hooks/use-cart.js"],"names":["useState","products","defaultCart","addToCart","id","updateCart","prev","cart","quantity","cartItems","Object","keys","map","key","product","find","pricePerItem","price","subTotal","reduce","accumulator","totalItems","useCart"],"mappings":";;;;;;;;AAAA,SAAQA,QAAR,QAAuB,OAAvB;AAEA,OAAOC,QAAP,MAAqB,kBAArB;AAEA,IAAMC,WAAW,GAAG;AAClBD,EAAAA,QAAQ,EAAE;AADQ,CAApB;;AAIA,SAASE,SAAT,GAA6B;AAAA,iFAAH,EAAG;AAAA,MAATC,EAAS,QAATA,EAAS;;AAC3BC,EAAAA,UAAU,CAAC,UAAAC,IAAI,EAAI;AACjB,QAAIC,IAAI,qBAAOD,IAAP,CAAR;;AAEA,QAAIC,IAAI,CAACN,QAAL,CAAcG,EAAd,CAAJ,EAAuB;AACrBG,MAAAA,IAAI,CAACN,QAAL,CAAcG,EAAd,EAAkBI,QAAlB,GAA6BD,IAAI,CAACN,QAAL,CAAcG,EAAd,EAAkBI,QAAlB,GAA6B,CAA1D;AACD,KAFD,MAEO;AACLD,MAAAA,IAAI,CAACN,QAAL,CAAcG,EAAd,IAAoB;AAClBA,QAAAA,EAAE,EAAFA,EADkB;AAElBI,QAAAA,QAAQ,EAAE;AAFQ,OAApB;AAID;;AACD,WAAOD,IAAP;AACD,GAZS,CAAV;AAaD;;AAED,IAAME,SAAS,GAAGC,MAAM,CAACC,IAAP,CAAYJ,IAAI,CAACN,QAAjB,EAA2BW,GAA3B,CAA+B,UAAAC,GAAG,EAAI;AACtD,MAAMC,OAAO,GAAGb,QAAQ,CAACc,IAAT,CAAc;AAAA,QAAEX,EAAF,SAAEA,EAAF;AAAA,WAAU,UAAGA,EAAH,gBAAeS,GAAf,CAAV;AAAA,GAAd,CAAhB;AACA,yCACKN,IAAI,CAACN,QAAL,CAAcY,GAAd,CADL;AAEEG,IAAAA,YAAY,EAAEF,OAAO,CAACG;AAFxB;AAID,CANiB,CAAlB;AAQA,IAAMC,QAAQ,GAAGT,SAAS,CAACU,MAAV,CAAiB,UAACC,WAAD,SAA2C;AAAA,MAA5BJ,YAA4B,SAA5BA,YAA4B;AAAA,MAAdR,QAAc,SAAdA,QAAc;AAC3E,SAAOY,WAAW,GAAIJ,YAAY,GAAGR,QAArC;AACD,CAFgB,EAEd,CAFc,CAAjB;AAIA,IAAMa,UAAU,GAAGZ,SAAS,CAACU,MAAV,CAAiB,UAACC,WAAD,SAA6B;AAAA,MAAdZ,QAAc,SAAdA,QAAc;AAC/D,SAAOY,WAAW,GAAGZ,QAArB;AACD,CAFkB,EAEhB,CAFgB,CAAnB;AAOA,eAAe,SAASc,OAAT,GAAkB;AAAA;;AAAA,kBACJtB,QAAQ,CAACE,WAAD,CADJ;AAAA,MACxBK,IADwB;AAAA,MAClBF,UADkB;;AAE/B,SAAO;AACLE,IAAAA,IAAI,EAAJA,IADK;AAELF,IAAAA,UAAU,EAAVA,UAFK;AAGLa,IAAAA,QAAQ,EAARA,QAHK;AAILT,IAAAA,SAAS,EAATA;AAJK,GAAP;AAMD;;GARuBa,O","sourcesContent":["import {useState} from 'react';\n\nimport products from '../products.json';\n\nconst defaultCart = {\n  products: {}\n}\n\nfunction addToCart({id} = {}){\n  updateCart(prev => {\n    let cart = {...prev}\n\n    if (cart.products[id]) {\n      cart.products[id].quantity = cart.products[id].quantity + 1\n    } else {\n      cart.products[id] = {\n        id,\n        quantity: 1\n      }\n    }\n    return cart;\n  })\n}\n\nconst cartItems = Object.keys(cart.products).map(key => {\n  const product = products.find(({id}) => `${id}` === `${key}`)\n  return {\n    ...cart.products[key],\n    pricePerItem: product.price\n  }\n})\n\nconst subTotal = cartItems.reduce((accumulator, {pricePerItem, quantity}) => {\n  return accumulator + (pricePerItem * quantity)\n}, 0)\n\nconst totalItems = cartItems.reduce((accumulator, {quantity}) => {\n  return accumulator + quantity\n}, 0)\n\n\n\n\nexport default function useCart(){\n  const [cart, updateCart] = useState(defaultCart)\n  return {\n    cart,\n    updateCart,\n    subTotal,\n    cartItems\n  }\n}"]},"metadata":{},"sourceType":"module"}